--- modules-3.2.9-orig/utility.c	2011-11-28 22:27:13.000000000 +0100
+++ modules-3.2.9/utility.c	2012-06-18 10:40:10.177217796 +0200
@@ -3054,23 +3054,20 @@ EM_RetVal ReturnValue(Tcl_Interp *interp
 			*endp		= (char *) NULL;
 	const char 	*tstr;
 	int		 result;
-	static Tcl_RegExp	exit__expPtr,
-				break_expPtr,
-				continue_expPtr;
+	Tcl_RegExp	exit__expPtr,
+			break_expPtr,
+			continue_expPtr;
 
 	tstr = (const char *) TCL_RESULT(interp);
 
 	/* compile regular expression the first time through */
-	if (!exit__expPtr)
-		exit__expPtr = Tcl_RegExpCompile(interp, "^EXIT ([0-9]*)");
+	exit__expPtr = Tcl_RegExpCompile(interp, "^EXIT ([0-9]*)");
 
 	/*  result = "invoked \"break\" outside of a loop" */
-	if (!break_expPtr)
-		break_expPtr = Tcl_RegExpCompile(interp, ".*\"break\".*");
+	break_expPtr = Tcl_RegExpCompile(interp, ".*\"break\".*");
 
 	/*  result = "invoked \"continue\" outside of a loop" */
-	if (!continue_expPtr)
-		continue_expPtr = Tcl_RegExpCompile(interp, ".*\"continue\".*");
+	continue_expPtr = Tcl_RegExpCompile(interp, ".*\"continue\".*");
 
 	/* intercept any "EXIT N" first */
 	if(tstr && *tstr && 0 < Tcl_RegExpExec(interp, exit__expPtr,
